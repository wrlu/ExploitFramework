import android.os.Looper;

import com.wrlus.expfwk.cmd.Task;
import com.wrlus.expfwk.cmd.ExitTask;
import com.wrlus.expfwk.cmd.HelpTask;
import com.wrlus.expfwk.cmd.control.DexTask;
import com.wrlus.expfwk.cmd.info.InfoTask;
import com.wrlus.expfwk.cmd.control.ApkTask;

import com.wrlus.expfwk.utils.LogUtil;

import java.util.Scanner;

public class Main {
    private static final String TAG = "Main";

    private static void showWelcome() {
        LogUtil.i(TAG, "");
        LogUtil.i(TAG, "============================================================");
        LogUtil.i(TAG, "");
        LogUtil.i(TAG, "Android Exploit Framework");
        LogUtil.i(TAG, "By wrlu (@xiaolulwr)");
        LogUtil.i(TAG, "Release date: 2022/08/24");
        LogUtil.i(TAG, "");
        LogUtil.i(TAG, "============================================================");
        LogUtil.i(TAG, "");
    }

    public static void main(String[] args)  {
        showWelcome();
        Looper.prepare();
        Scanner scanner = new Scanner(System.in);
        while (!Thread.currentThread().isInterrupted()) {
            System.out.print('>');
            String input = scanner.nextLine().trim().toLowerCase();
            if (input.equals("")) {
                continue;
            }
            String[] cmdAndParams = Task.resolveCmdAndParams(input);
            if (cmdAndParams == null) {
                LogUtil.e(TAG, "Invalid input");
                continue;
            }
            String cmd = cmdAndParams[0];
            String params = cmdAndParams[1];
            Task task;
            switch (cmd) {
                case Task.HELP_TASK:
                    task = new HelpTask();
                    break;
                case Task.EXIT_TASK:
                case Task.QUIT_TASK:
                    task = new ExitTask();
                    break;
                case Task.INFO_TASK:
                    task = new InfoTask();
                    break;
                case Task.INSTALL_APK_TASK:
                    task = new ApkTask(params);
                    break;
                case Task.DEX_TASK:
                    task = new DexTask(params);
                    break;
                default:
                    LogUtil.e(TAG, "Unknown command: "+cmd);
                    continue;
            }
            task.doTask();
        }
    }
}
