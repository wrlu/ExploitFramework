package com.wrlus.expfwk.cmd.info;

import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.os.Process;
import android.util.Log;
import com.wrlus.expfwk.cmd.Task;
import com.wrlus.expfwk.utils.ContextUtil;
import com.wrlus.expfwk.utils.LogUtil;
import org.json.JSONObject;

import java.util.List;

public class PackageTask extends Task {
    private static final String TAG = "AppTask";

    @Override
    public void doTask() {
        readPackageList();
    }

    private void readPackageList() {
        PackageManager pm = ContextUtil.getSystemContext().getPackageManager();
        List<ApplicationInfo> applicationInfos = pm.getInstalledApplications(0);
        Log.d(TAG, "Total: "+applicationInfos.size());
        int system_app = 0;
        int platform_app = 0;
        int priv_app = 0;
        int untrusted_app = 0;
        for (android.content.pm.ApplicationInfo applicationInfo : applicationInfos) {
            String label = getAppLabel(applicationInfo.packageName);
            switch (label) {
                case "system_app":
                    system_app++;
                    break;
                case "platform_app":
                    platform_app++;
                    break;
                case "priv_app":
                    priv_app++;
                    break;
                case "untrusted_app":
                    untrusted_app++;
                    break;
            }
            LogUtil.i(TAG, applicationInfo.packageName + "=" + label);
        }
        LogUtil.i(TAG, "");
        LogUtil.i(TAG, "Total:");
        LogUtil.i(TAG, "system_app="+system_app);
        LogUtil.i(TAG, "platform_app="+platform_app);
        LogUtil.i(TAG, "priv_app="+priv_app);
        LogUtil.i(TAG, "untrusted_app="+untrusted_app);
    }

    private String getAppLabel(String packageName) {
        String PKG_ANDROID = "android";
        PackageManager pm = ContextUtil.getSystemContext().getPackageManager();
        boolean isPlatformApp = pm.checkSignatures(packageName,
                PKG_ANDROID) == PackageManager.SIGNATURE_MATCH;
        boolean isSystemApp = false;
        boolean isPrivApp = false;
        try {
            isSystemApp = pm.getPackageUid(packageName, 0) == Process.SYSTEM_UID;
            isPrivApp = com.wrlus.hiddenapireflector.android.content.pm.ApplicationInfo
                    .isPrivilegedApp(pm.getApplicationInfo(packageName, 0));
        } catch (PackageManager.NameNotFoundException e) {
            e.printStackTrace();
        }
        if (isSystemApp && isPlatformApp && isPrivApp)
            return "system_app";
        else if (isPlatformApp)
            return "platform_app";
        else if (isPrivApp)
            return "priv_app";
        else
            return "untrusted_app";
    }
}
