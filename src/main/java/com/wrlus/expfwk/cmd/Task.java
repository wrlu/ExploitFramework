package com.wrlus.expfwk.cmd;

import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;

import com.wrlus.expfwk.utils.LogUtil;
import org.json.JSONException;
import org.json.JSONObject;

public abstract class Task {
    private static final String TAG = "Task";

    public static final String EXIT_TASK = "exit";
    public static final String QUIT_TASK = "quit";
    public static final String HELP_TASK = "help";
//    Show info of current process (uid, pid and UserHandle).
    public static final String INFO_TASK = "info";
//    List all granted permission.
    public static final String PERMISSION_TASK = "permission";
//    Install apk ./base.apk, needs INSTALL_PACKAGES permission.
    public static final String INSTALL_APK_TASK = "installapk";
    public static final String INSTALL_PACKAGE_TASK = "installpackage";
//    Read SMS, needs READ_SMS permission. (Cannot read auth codes & OTPs on some China ROMs)
    public static final String READ_SMS = "readsms";
//    Read Call Log, needs READ_CALL_LOG permission.
    public static final String READ_CALL_LOG = "readcalllog";
//
    public static final String CONTENT = "content";

    public abstract void doTask(JSONObject params);

    public JSONObject parseParamsFromCmd(String params) {
        return null;
    }

    public JSONObject parseParamsFromJson(String params) {
        if (params.startsWith("--json")) {
            String jsonStr = params.trim()
                .substring(params.lastIndexOf(" "));
            try {
                return new JSONObject(jsonStr);
            } catch (JSONException e) {
                LogUtil.e(TAG, e.getMessage());
                e.printStackTrace();
            }
        } else {
            LogUtil.e(TAG, "parseParamsFromJson: Invalid parameters");
        }
        return null;
    }

    public JSONObject parseParamsFromJsonFile(String params) {
        if (params.startsWith("--jsonfile")) {
            try {
                String jsonFile = params.trim()
                    .substring(params.lastIndexOf(" "));
                BufferedReader reader = new BufferedReader(new FileReader(jsonFile));
                StringBuilder jsonStr = new StringBuilder();
                String str = reader.readLine();
                while (str != null) {
                    jsonStr.append(str);
                    str = reader.readLine();
                }
                return new JSONObject(jsonStr.toString());
            } catch (IOException | JSONException e) {
                LogUtil.e(TAG, e.getMessage());
                e.printStackTrace();
            }
        } else {
            LogUtil.e(TAG, "parseParamsFromJsonFile: Invalid parameters");
        }
        return null;
    }
}
